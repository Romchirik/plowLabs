import frac;
import ds/vector;

export {
    ArExpr ::= ArSum, ArSub, ArMul, ArDiv, ArNeg, Fraction, ArVar;

    //Tree form
    ArSum(lhs: ArExpr, rhs: ArExpr);
    ArSub(lhs: ArExpr, rhs: ArExpr);
    ArMul(lhs: ArExpr, rhs: ArExpr);
    ArDiv(lhs: ArExpr, rhs: ArExpr);
    ArNeg(bhs: ArExpr);
    ArVar(name: string);

    //RPN form 
    RpnSum();
    RpnSub();
    RpnMul();
    RpnDiv();
    RpnNeg();
    RpnOp ::= RpnSum, RpnSub, RpnMul, RpnDiv, RpnNeg;
    RpnExpr ::= Fraction, RpnOp;   

    //Ratfunc

    RatVar(name: string, pow: int);
    RatPol(mons: Vector<RatMon>);
    RatMon(coef: Fraction, mul: Vector<RatVar>);
    RatFun(numerator: RatPol, denominator: RatPol);
}

